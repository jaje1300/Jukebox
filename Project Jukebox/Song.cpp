//File created on 04/22/2015 09:30 PM
//Author: Jacob J
// Created: 2015-04-22
// Last edited: 2015-04-27
// Description: Implementation with definitions for song.h
// Name: Song.cpp

#include "Song.h"

//***************************************************************************************************************************************************************************************
//Constructors & destructor
//***************************************************************************************************************************************************************************************
//
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: Person
//Task: Default constructor
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Song::Song()
{
	title;
	artist;
	time;	
}
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: Person
//Task: Initiate data members
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Song::Song(string pTitle, string pArtist, Time pTime){
	title = pTitle;
	artist = pArtist;
	time = pTime;
}
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: ~Person
//Task: Destructor
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Song::~Song()
{
}
//_______________________________________________________________________________________________________________________________________________________________________________________


//***************************************************************************************************************************************************************************************
//SET function definitions
//***************************************************************************************************************************************************************************************
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: setArtist
//Task: Takes string and adds to class element
//Input: string tmpArtist
//Output: 
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void Song::setArtist(const string pArtist){
	artist = pArtist;
}
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: setTitle
//Task: Takes string and adds to class element
//Input: string pTitle
//Output: 
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void Song::setTitle(const string pTitle){
	title = pTitle;
}
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: setTime
//Task: Takes Time object and adds to class element
//Input: Time pTime
//Output: 
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void Song::setTime(const Time pTime){
	time = pTime;
}
//_______________________________________________________________________________________________________________________________________________________________________________________




//***************************************************************************************************************************************************************************************
//Stand-alone function definitions
//***************************************************************************************************************************************************************************************
//overloads********
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: operator<<
//Task: Overload '<<' to save elements to file
//Input: ostream &os, const Song &song
//Output: return os
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ostream &operator<<(ostream &os, const Song &song){
	const char DELIM = '|';

	os << song.getTitle() << DELIM;
	os << song.getArtist() << DELIM;
	os << song.getTime();									//endl is done in "PersonList"

	return os;
}
//_______________________________________________________________________________________________________________________________________________________________________________________
//Name: operator>>
//Task: Overload '>>' to read elements to file
//Input: istream &is, Song &song
//Output: return is
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
istream &operator>>(istream &is, Song &song){
	const char DELIM = '|';
	string tmpTitle;
	string tmpArtist;
	Time tmpTime;

	getline(is, tmpTitle, DELIM);
	getline(is, tmpArtist, DELIM);
	is >> tmpTime;
	is.get();
	
	song.setTitle(tmpTitle);
	song.setArtist(tmpArtist);
	song.setTime(tmpTime);

	return is;
}
//_______________________________________________________________________________________________________________________________________________________________________________________


//***************************************************************************************************************************************************************************************
